--inisiasi git untuk pertama kali
git init

-- check status file yang berubah
git status

--list branch
git branch

--membuat branch
git branch <namabranch> -> tetap dicurrent branch
git checkout -b <namabranch> -> langsung pindah ke branch baru
git checkout -b <namabranch> <baseonbranch>-> membuat branch berdasarkan base dari branch apa

-- pindah branch
git checkout <namabranch>

-- delete branch
git branch --delete <namabranch> -> hapus branch dilocal
git push origin --delete <namabranch> -> hapus branch diremote

-- add file sebelum commit
git add . -> add semua file
git add <dir/file> <dir/file> -> multiple file

-- clear stage area
git reset HEAD . -> add semua file
git reset HEAD <dir/file> <dir/file> -> multiple file

-- commit
git commit -am "massage commit"

--menambahkan repository local ke remote git
git remote add origin <link git>

-- push ke remote
git push -u origin <namabranch>

-- menyimpan dan melenyapkan code yang dibuat ke dalam stash, dan bisa dikembalikan lagi jika dibutuhkan. mirip revert tapi tersimpan
git stash

-- mengembalikan stash
git stash pop

********CASE GIT RESET*********

--Sudah commit, belum dipush 
1. git log
2. git reset --soft <versiongit>
note : misal lognya sebagai berikut
commit1 <abcdef>
commit2 <hijklm>
anda ingin balik ke commit1 yang artinya commit2 dibatalkan commitnya maka lakukan command
git reset --soft abcdef
sehingga commit dibatalkan tapi perubahan code masih tersimpan dilocal persis saat sebelum dicommit

--Sudah commit, dan sudah dipush
1. git log
2. git reset --hard <versiongit>
3. git push -f origin master -> force push ke remote untuk resetnya
note : cara kerjanya command line seperti git soft, tetapi pengertian hard sendiri yaitu benar2 menghapus perubahan dan staging area, jadi HATI HATI!